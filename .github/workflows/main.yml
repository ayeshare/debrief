# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  install:
    name: Before installation
    runs-on: ubuntu-latest
    steps:
      - name: Update ubuntu
        run: |
                sudo apt-get install -y libsqlite3-mod-spatialite
                sudo apt-get install libpq-dev python-dev
                sudo add-apt-repository -y ppa:ubuntugis/ppa
                sudo apt-get update
                sudo apt-get install -y postgis 
      - name: The actual installation
        run: | 
                    mvn --version
                    sudo apt-get install intltool
                    sudo apt-get install libgsf-1-dev
                    sudo apt-get install uuid-runtime
                    sudo apt-get install libglib2.0-dev
                    sudo apt-get install libxml2-dev
                    sudo apt-get install unzip
                    sudo apt-get install spatialite-bin
                    sudo apt-get install gcab
                    sudo apt-get install libgcab-1.0-0
                    sudo apt-get install libgcab-dev
                    sudo apt-get install libgconf-2-4
                    sudo apt-get install xvfb
                    #  - name: Start service
                    #sh -e /etc/init.d/xvfb start
                       # This workflow contains a single job called "build"
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # xvfbservice:
      #   name: start xvfb
      #   runs-on: ubuntu-latest
      #   needs: install
      #   steps:
      #           - name: run xvfb
      #             run: |
      #                   sudo rm /tmp/.X99-lock
      #                   export DISPLAY=:99
      #                   sudo Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
      #                   sleep 3
      #                   xdpyinfo -display :0 >/dev/null 2>&1 && echo "In use" || echo "Free"

  build:
    name: Checkout and build
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Checkout from repository 
        uses: actions/setup-java@v1
        with:
           java-version: 1.11
      - name: install java
        run: |
               sleep 3
               echo "root.win32.win32.x86_64 = win-64" >> org.mwc.debrief.combined.feature/build.properties
               # get a 64-bit windows JRE
               wget -P dest https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.5%2B10/OpenJDK11U-jre_x64_windows_hotspot_11.0.5_10.zip
               # unpack it
               cd dest
               unzip OpenJD*.zip
               # rename and move it
               mv *-jre jre
               mkdir ../org.mwc.debrief.combined.feature/win-64
               # move it to the target folder
               mv jre ../org.mwc.debrief.combined.feature/win-64/jre
               # move back to top level
               cd ../
      - name: do maven build
        uses: GabrielBB/xvfb-action@v1
        with:
                working-directory: ./
        run: mvn clean verify -U -B -fae
      - name: publish test results 
        if: always()
        run: |
                    ls org.mwc.debrief.test2/target
                    cat org.mwc.debrief.test2/target/surefire-reports/TEST-org.mwc.debrief.test.AllTests.xml
                    #curl -u ianmayo:chunkchunk -T org.mwc.debrief.test2/target/surefire-reports/TEST-org.mwc.debrief.test.AllTests.xml chunk.io
  before-deploy:
    runs-on: ubuntu-latest
    needs: build
    name: before deploy
    steps:
     - name: build installer
       run: |
           ls /home/travis/build/debrief/debrief/org.mwc.debrief.product/target/products/
           ./install-msitools.sh
           ./contribs/msi/make_x64msi.sh
     - name: Cleanup xvfb pidx
       uses: bcomnes/cleanup-xvfb@v1
           # deploy:
           #   runs-on: ubuntu-latest
           #   needs: before-deploy 
           #   name: Download maven build artifact
           #   with :
           #     name: artifact
           #     steps: 
           #     - name: Run a one-line script
           #       run: echo Hello, world!
           #
           #     # Runs a set of commands using the runners shell
           #     - name: Run a multi-line script
           #       run: |
           #         echo Add other actions to build,
           #         echo test, and deploy your project.
      
