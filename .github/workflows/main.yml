# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  before-install:
    name: Before installation
    runs-on: ubuntu-latest
    steps:
      - name: Update ubuntu
        run: |
                sudo apt-get install -y libsqlite3-mod-spatialite,
                sudo apt-get install libpq-dev python-dev,
                sudo add-apt-repository -y ppa:ubuntugis/ubuntugis-unstable,
                sudo apt-get update,
                sudo apt-get install postgis
        install:
          - name: Install maven packages
            run: | 
                    mvn --version,
                    sudo apt-get install intltool
                    sudo apt-get install libgsf-1-dev,
                    sudo apt-get install uuid-runtime
                    sudo apt-get install libglib2.0-dev,
                    sudo apt-get install libxml2-dev,
                    sudo apt-get install unzip,
                    sudo apt-get install spatialite-bin,
                    sudo apt-get install libgdal20,
                    sudo apt-get install gcab,
                    sudo apt-get install libgcab-1.0-0,
                    sudo apt-get install libgcab-dev
         services:
           - name: Start service
             run: | 
                     sh -e /etc/init.d/xvfb start,
                       # This workflow contains a single job called "build"
  build-and-deploy:
    name: Build and Deploy
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Do the build
        run: |
               export DISPLAY=:99,
               sleep 3,
               echo "root.win32.win32.x86_64 = win-64" >> org.mwc.debrief.combined.feature/build.properties,
               # get a 64-bit windows JRE
               wget -P dest https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.5%2B10/OpenJDK11U-jre_x64_windows_hotspot_11.0.5_10.zip,
               # unpack it
               cd dest,
               unzip OpenJD*.zip,
               # rename and move it
               mv *-jre jre,
               mkdir ../org.mwc.debrief.combined.feature/win-64,
               # move it to the target folder
               mv jre ../org.mwc.debrief.combined.feature/win-64/jre,
               # move back to top level
               cd ../
        -name: build
        run: mvn clean verify -U -B -fae

        # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
